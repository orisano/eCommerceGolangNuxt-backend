// Code generated by entc, DO NOT EDIT.

package shopcategory

import (
	"time"
)

const (
	// Label holds the string label denoting the shopcategory type in the database.
	Label = "shop_category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeCategories holds the string denoting the categories edge name in mutations.
	EdgeCategories = "categories"
	// EdgeSellerRequests holds the string denoting the seller_requests edge name in mutations.
	EdgeSellerRequests = "seller_requests"
	// EdgeSellerShops holds the string denoting the seller_shops edge name in mutations.
	EdgeSellerShops = "seller_shops"
	// Table holds the table name of the shopcategory in the database.
	Table = "shop_categories"
	// CategoriesTable is the table that holds the categories relation/edge.
	CategoriesTable = "categories"
	// CategoriesInverseTable is the table name for the Category entity.
	// It exists in this package in order to avoid circular dependency with the "category" package.
	CategoriesInverseTable = "categories"
	// CategoriesColumn is the table column denoting the categories relation/edge.
	CategoriesColumn = "shop_category_categories"
	// SellerRequestsTable is the table that holds the seller_requests relation/edge.
	SellerRequestsTable = "seller_requests"
	// SellerRequestsInverseTable is the table name for the SellerRequest entity.
	// It exists in this package in order to avoid circular dependency with the "sellerrequest" package.
	SellerRequestsInverseTable = "seller_requests"
	// SellerRequestsColumn is the table column denoting the seller_requests relation/edge.
	SellerRequestsColumn = "shop_category_seller_requests"
	// SellerShopsTable is the table that holds the seller_shops relation/edge.
	SellerShopsTable = "seller_shops"
	// SellerShopsInverseTable is the table name for the SellerShop entity.
	// It exists in this package in order to avoid circular dependency with the "sellershop" package.
	SellerShopsInverseTable = "seller_shops"
	// SellerShopsColumn is the table column denoting the seller_shops relation/edge.
	SellerShopsColumn = "shop_category_seller_shops"
)

// Columns holds all SQL columns for shopcategory fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldSlug,
	FieldImage,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
