// Code generated by entc, DO NOT EDIT.

package sellerproductvariationvalues

import (
	"time"
)

const (
	// Label holds the string label denoting the sellerproductvariationvalues type in the database.
	Label = "seller_product_variation_values"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeAttribute holds the string denoting the attribute edge name in mutations.
	EdgeAttribute = "attribute"
	// EdgeSellerProductVariation holds the string denoting the seller_product_variation edge name in mutations.
	EdgeSellerProductVariation = "seller_product_variation"
	// Table holds the table name of the sellerproductvariationvalues in the database.
	Table = "seller_product_variation_values"
	// AttributeTable is the table that holds the attribute relation/edge.
	AttributeTable = "seller_product_variation_values"
	// AttributeInverseTable is the table name for the Attribute entity.
	// It exists in this package in order to avoid circular dependency with the "attribute" package.
	AttributeInverseTable = "attributes"
	// AttributeColumn is the table column denoting the attribute relation/edge.
	AttributeColumn = "attribute_attribute"
	// SellerProductVariationTable is the table that holds the seller_product_variation relation/edge.
	SellerProductVariationTable = "seller_product_variation_values"
	// SellerProductVariationInverseTable is the table name for the SellerProductVariation entity.
	// It exists in this package in order to avoid circular dependency with the "sellerproductvariation" package.
	SellerProductVariationInverseTable = "seller_product_variations"
	// SellerProductVariationColumn is the table column denoting the seller_product_variation relation/edge.
	SellerProductVariationColumn = "seller_product_variation_seller_product_variation_values"
)

// Columns holds all SQL columns for sellerproductvariationvalues fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "seller_product_variation_values"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"attribute_attribute",
	"seller_product_variation_seller_product_variation_values",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
