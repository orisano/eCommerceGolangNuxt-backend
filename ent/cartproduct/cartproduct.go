// Code generated by entc, DO NOT EDIT.

package cartproduct

import (
	"time"
)

const (
	// Label holds the string label denoting the cartproduct type in the database.
	Label = "cart_product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeSellerProduct holds the string denoting the seller_product edge name in mutations.
	EdgeSellerProduct = "seller_product"
	// EdgeCart holds the string denoting the cart edge name in mutations.
	EdgeCart = "cart"
	// EdgeSellerProductVariation holds the string denoting the seller_product_variation edge name in mutations.
	EdgeSellerProductVariation = "seller_product_variation"
	// Table holds the table name of the cartproduct in the database.
	Table = "cart_products"
	// SellerProductTable is the table that holds the seller_product relation/edge.
	SellerProductTable = "cart_products"
	// SellerProductInverseTable is the table name for the SellerProduct entity.
	// It exists in this package in order to avoid circular dependency with the "sellerproduct" package.
	SellerProductInverseTable = "seller_products"
	// SellerProductColumn is the table column denoting the seller_product relation/edge.
	SellerProductColumn = "seller_product_cart_products"
	// CartTable is the table that holds the cart relation/edge.
	CartTable = "cart_products"
	// CartInverseTable is the table name for the Cart entity.
	// It exists in this package in order to avoid circular dependency with the "cart" package.
	CartInverseTable = "carts"
	// CartColumn is the table column denoting the cart relation/edge.
	CartColumn = "cart_cart_products"
	// SellerProductVariationTable is the table that holds the seller_product_variation relation/edge.
	SellerProductVariationTable = "cart_products"
	// SellerProductVariationInverseTable is the table name for the SellerProductVariation entity.
	// It exists in this package in order to avoid circular dependency with the "sellerproductvariation" package.
	SellerProductVariationInverseTable = "seller_product_variations"
	// SellerProductVariationColumn is the table column denoting the seller_product_variation relation/edge.
	SellerProductVariationColumn = "seller_product_variation_cart_products"
)

// Columns holds all SQL columns for cartproduct fields.
var Columns = []string{
	FieldID,
	FieldQuantity,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "cart_products"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"cart_cart_products",
	"seller_product_cart_products",
	"seller_product_variation_cart_products",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
