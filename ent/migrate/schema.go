// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AttributesColumns holds the columns for the "attributes" table.
	AttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// AttributesTable holds the schema information for the "attributes" table.
	AttributesTable = &schema.Table{
		Name:       "attributes",
		Columns:    AttributesColumns,
		PrimaryKey: []*schema.Column{AttributesColumns[0]},
	}
	// BrandsColumns holds the columns for the "brands" table.
	BrandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// BrandsTable holds the schema information for the "brands" table.
	BrandsTable = &schema.Table{
		Name:       "brands",
		Columns:    BrandsColumns,
		PrimaryKey: []*schema.Column{BrandsColumns[0]},
	}
	// CartsColumns holds the columns for the "carts" table.
	CartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_carts", Type: field.TypeInt, Nullable: true},
	}
	// CartsTable holds the schema information for the "carts" table.
	CartsTable = &schema.Table{
		Name:       "carts",
		Columns:    CartsColumns,
		PrimaryKey: []*schema.Column{CartsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carts_users_carts",
				Columns:    []*schema.Column{CartsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CartProductsColumns holds the columns for the "cart_products" table.
	CartProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "cart_cart_products", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_cart_products", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_variation_cart_products", Type: field.TypeInt, Nullable: true},
	}
	// CartProductsTable holds the schema information for the "cart_products" table.
	CartProductsTable = &schema.Table{
		Name:       "cart_products",
		Columns:    CartProductsColumns,
		PrimaryKey: []*schema.Column{CartProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cart_products_carts_cart_products",
				Columns:    []*schema.Column{CartProductsColumns[5]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cart_products_seller_products_cart_products",
				Columns:    []*schema.Column{CartProductsColumns[6]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cart_products_seller_product_variations_cart_products",
				Columns:    []*schema.Column{CartProductsColumns[7]},
				RefColumns: []*schema.Column{SellerProductVariationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "category_children", Type: field.TypeInt, Nullable: true},
		{Name: "shop_category_categories", Type: field.TypeInt, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "categories_categories_children",
				Columns:    []*schema.Column{CategoriesColumns[6]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "categories_shop_categories_categories",
				Columns:    []*schema.Column{CategoriesColumns[7]},
				RefColumns: []*schema.Column{ShopCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckoutsColumns holds the columns for the "checkouts" table.
	CheckoutsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "completed", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "cart_checkout", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "user_checkouts", Type: field.TypeInt, Nullable: true},
		{Name: "user_location_user_locations", Type: field.TypeInt, Nullable: true},
	}
	// CheckoutsTable holds the schema information for the "checkouts" table.
	CheckoutsTable = &schema.Table{
		Name:       "checkouts",
		Columns:    CheckoutsColumns,
		PrimaryKey: []*schema.Column{CheckoutsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "checkouts_carts_checkout",
				Columns:    []*schema.Column{CheckoutsColumns[6]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkouts_users_checkouts",
				Columns:    []*schema.Column{CheckoutsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkouts_user_locations_user_locations",
				Columns:    []*schema.Column{CheckoutsColumns[8]},
				RefColumns: []*schema.Column{UserLocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckoutProductsColumns holds the columns for the "checkout_products" table.
	CheckoutProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "selling_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "offer_price", Type: field.TypeInt},
		{Name: "received", Type: field.TypeBool, Default: false},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "checkout_checkout_products", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_checkout_products", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_variation_checkout_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_checkout_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_seller_checkout_products", Type: field.TypeInt, Nullable: true},
	}
	// CheckoutProductsTable holds the schema information for the "checkout_products" table.
	CheckoutProductsTable = &schema.Table{
		Name:       "checkout_products",
		Columns:    CheckoutProductsColumns,
		PrimaryKey: []*schema.Column{CheckoutProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "checkout_products_checkouts_checkout_products",
				Columns:    []*schema.Column{CheckoutProductsColumns[9]},
				RefColumns: []*schema.Column{CheckoutsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkout_products_seller_products_checkout_products",
				Columns:    []*schema.Column{CheckoutProductsColumns[10]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkout_products_seller_product_variations_checkout_products",
				Columns:    []*schema.Column{CheckoutProductsColumns[11]},
				RefColumns: []*schema.Column{SellerProductVariationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkout_products_users_checkout_products",
				Columns:    []*schema.Column{CheckoutProductsColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checkout_products_users_seller_checkout_products",
				Columns:    []*schema.Column{CheckoutProductsColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerProductsColumns holds the columns for the "seller_products" table.
	SellerProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "selling_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "product_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "offer_price", Type: field.TypeInt, Nullable: true},
		{Name: "offer_price_start", Type: field.TypeTime, Nullable: true},
		{Name: "offer_price_end", Type: field.TypeTime, Nullable: true},
		{Name: "next_stock", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "brand_brand", Type: field.TypeInt, Nullable: true},
		{Name: "seller_shop_seller_products", Type: field.TypeInt, Nullable: true},
		{Name: "user_seller_products", Type: field.TypeInt, Nullable: true},
	}
	// SellerProductsTable holds the schema information for the "seller_products" table.
	SellerProductsTable = &schema.Table{
		Name:       "seller_products",
		Columns:    SellerProductsColumns,
		PrimaryKey: []*schema.Column{SellerProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_products_brands_brand",
				Columns:    []*schema.Column{SellerProductsColumns[15]},
				RefColumns: []*schema.Column{BrandsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_products_seller_shops_seller_products",
				Columns:    []*schema.Column{SellerProductsColumns[16]},
				RefColumns: []*schema.Column{SellerShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_products_users_seller_products",
				Columns:    []*schema.Column{SellerProductsColumns[17]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerProductCategoriesColumns holds the columns for the "seller_product_categories" table.
	SellerProductCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "category_product_categories", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_seller_product_categories", Type: field.TypeInt, Nullable: true},
	}
	// SellerProductCategoriesTable holds the schema information for the "seller_product_categories" table.
	SellerProductCategoriesTable = &schema.Table{
		Name:       "seller_product_categories",
		Columns:    SellerProductCategoriesColumns,
		PrimaryKey: []*schema.Column{SellerProductCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_product_categories_categories_product_categories",
				Columns:    []*schema.Column{SellerProductCategoriesColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_product_categories_seller_products_seller_product_categories",
				Columns:    []*schema.Column{SellerProductCategoriesColumns[5]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerProductImagesColumns holds the columns for the "seller_product_images" table.
	SellerProductImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "display", Type: field.TypeBool, Default: false},
		{Name: "image", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "seller_product_seller_product_images", Type: field.TypeInt, Nullable: true},
	}
	// SellerProductImagesTable holds the schema information for the "seller_product_images" table.
	SellerProductImagesTable = &schema.Table{
		Name:       "seller_product_images",
		Columns:    SellerProductImagesColumns,
		PrimaryKey: []*schema.Column{SellerProductImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_product_images_seller_products_seller_product_images",
				Columns:    []*schema.Column{SellerProductImagesColumns[6]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerProductVariationsColumns holds the columns for the "seller_product_variations" table.
	SellerProductVariationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "product_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "selling_price", Type: field.TypeFloat64, SchemaType: map[string]string{"mysql": "decimal(6,2)", "postgres": "numeric"}},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "image", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "seller_product_seller_product_variations", Type: field.TypeInt, Nullable: true},
	}
	// SellerProductVariationsTable holds the schema information for the "seller_product_variations" table.
	SellerProductVariationsTable = &schema.Table{
		Name:       "seller_product_variations",
		Columns:    SellerProductVariationsColumns,
		PrimaryKey: []*schema.Column{SellerProductVariationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_product_variations_seller_products_seller_product_variations",
				Columns:    []*schema.Column{SellerProductVariationsColumns[8]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerProductVariationValuesColumns holds the columns for the "seller_product_variation_values" table.
	SellerProductVariationValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "attribute_attribute", Type: field.TypeInt, Nullable: true},
		{Name: "seller_product_variation_seller_product_variation_values", Type: field.TypeInt, Nullable: true},
	}
	// SellerProductVariationValuesTable holds the schema information for the "seller_product_variation_values" table.
	SellerProductVariationValuesTable = &schema.Table{
		Name:       "seller_product_variation_values",
		Columns:    SellerProductVariationValuesColumns,
		PrimaryKey: []*schema.Column{SellerProductVariationValuesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_product_variation_values_attributes_attribute",
				Columns:    []*schema.Column{SellerProductVariationValuesColumns[6]},
				RefColumns: []*schema.Column{AttributesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_product_variation_values_seller_product_variations_seller_product_variation_values",
				Columns:    []*schema.Column{SellerProductVariationValuesColumns[7]},
				RefColumns: []*schema.Column{SellerProductVariationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerRequestsColumns holds the columns for the "seller_requests" table.
	SellerRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "seller_name", Type: field.TypeString},
		{Name: "shop_name", Type: field.TypeString},
		{Name: "contact_number", Type: field.TypeString, Unique: true},
		{Name: "shop_location", Type: field.TypeString},
		{Name: "tax_id", Type: field.TypeString},
		{Name: "accepted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "shop_category_seller_requests", Type: field.TypeInt, Nullable: true},
		{Name: "user_seller_requests", Type: field.TypeInt, Nullable: true},
	}
	// SellerRequestsTable holds the schema information for the "seller_requests" table.
	SellerRequestsTable = &schema.Table{
		Name:       "seller_requests",
		Columns:    SellerRequestsColumns,
		PrimaryKey: []*schema.Column{SellerRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_requests_shop_categories_seller_requests",
				Columns:    []*schema.Column{SellerRequestsColumns[10]},
				RefColumns: []*schema.Column{ShopCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_requests_users_seller_requests",
				Columns:    []*schema.Column{SellerRequestsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerShopsColumns holds the columns for the "seller_shops" table.
	SellerShopsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "contact_number", Type: field.TypeString},
		{Name: "banner", Type: field.TypeString},
		{Name: "shop_category_id", Type: field.TypeString},
		{Name: "shop_category", Type: field.TypeString},
		{Name: "business_location", Type: field.TypeString},
		{Name: "tax_id", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_seller_shops", Type: field.TypeInt, Nullable: true},
		{Name: "user_approved_shops", Type: field.TypeInt, Nullable: true},
	}
	// SellerShopsTable holds the schema information for the "seller_shops" table.
	SellerShopsTable = &schema.Table{
		Name:       "seller_shops",
		Columns:    SellerShopsColumns,
		PrimaryKey: []*schema.Column{SellerShopsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_shops_users_seller_shops",
				Columns:    []*schema.Column{SellerShopsColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_shops_users_approved_shops",
				Columns:    []*schema.Column{SellerShopsColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SellerShopProductsColumns holds the columns for the "seller_shop_products" table.
	SellerShopProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "seller_product_seller_shop_products", Type: field.TypeInt, Nullable: true},
		{Name: "seller_shop_seller_shop_products", Type: field.TypeInt, Nullable: true},
	}
	// SellerShopProductsTable holds the schema information for the "seller_shop_products" table.
	SellerShopProductsTable = &schema.Table{
		Name:       "seller_shop_products",
		Columns:    SellerShopProductsColumns,
		PrimaryKey: []*schema.Column{SellerShopProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seller_shop_products_seller_products_seller_shop_products",
				Columns:    []*schema.Column{SellerShopProductsColumns[4]},
				RefColumns: []*schema.Column{SellerProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "seller_shop_products_seller_shops_seller_shop_products",
				Columns:    []*schema.Column{SellerShopProductsColumns[5]},
				RefColumns: []*schema.Column{SellerShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ShopCategoriesColumns holds the columns for the "shop_categories" table.
	ShopCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// ShopCategoriesTable holds the schema information for the "shop_categories" table.
	ShopCategoriesTable = &schema.Table{
		Name:       "shop_categories",
		Columns:    ShopCategoriesColumns,
		PrimaryKey: []*schema.Column{ShopCategoriesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "admin", Type: field.TypeBool, Default: false},
		{Name: "staff", Type: field.TypeBool, Default: false},
		{Name: "seller", Type: field.TypeBool, Default: false},
		{Name: "active", Type: field.TypeBool, Default: false},
		{Name: "admin_user_name", Type: field.TypeString},
		{Name: "admin_user_token", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserLocationsColumns holds the columns for the "user_locations" table.
	UserLocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "area", Type: field.TypeString},
		{Name: "street", Type: field.TypeString},
		{Name: "house", Type: field.TypeString},
		{Name: "post_office", Type: field.TypeString},
		{Name: "post_code", Type: field.TypeInt},
		{Name: "police_station", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_user_locations", Type: field.TypeInt, Nullable: true},
	}
	// UserLocationsTable holds the schema information for the "user_locations" table.
	UserLocationsTable = &schema.Table{
		Name:       "user_locations",
		Columns:    UserLocationsColumns,
		PrimaryKey: []*schema.Column{UserLocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_locations_users_user_locations",
				Columns:    []*schema.Column{UserLocationsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AttributesTable,
		BrandsTable,
		CartsTable,
		CartProductsTable,
		CategoriesTable,
		CheckoutsTable,
		CheckoutProductsTable,
		SellerProductsTable,
		SellerProductCategoriesTable,
		SellerProductImagesTable,
		SellerProductVariationsTable,
		SellerProductVariationValuesTable,
		SellerRequestsTable,
		SellerShopsTable,
		SellerShopProductsTable,
		ShopCategoriesTable,
		UsersTable,
		UserLocationsTable,
	}
)

func init() {
	CartsTable.ForeignKeys[0].RefTable = UsersTable
	CartProductsTable.ForeignKeys[0].RefTable = CartsTable
	CartProductsTable.ForeignKeys[1].RefTable = SellerProductsTable
	CartProductsTable.ForeignKeys[2].RefTable = SellerProductVariationsTable
	CategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoriesTable.ForeignKeys[1].RefTable = ShopCategoriesTable
	CheckoutsTable.ForeignKeys[0].RefTable = CartsTable
	CheckoutsTable.ForeignKeys[1].RefTable = UsersTable
	CheckoutsTable.ForeignKeys[2].RefTable = UserLocationsTable
	CheckoutProductsTable.ForeignKeys[0].RefTable = CheckoutsTable
	CheckoutProductsTable.ForeignKeys[1].RefTable = SellerProductsTable
	CheckoutProductsTable.ForeignKeys[2].RefTable = SellerProductVariationsTable
	CheckoutProductsTable.ForeignKeys[3].RefTable = UsersTable
	CheckoutProductsTable.ForeignKeys[4].RefTable = UsersTable
	SellerProductsTable.ForeignKeys[0].RefTable = BrandsTable
	SellerProductsTable.ForeignKeys[1].RefTable = SellerShopsTable
	SellerProductsTable.ForeignKeys[2].RefTable = UsersTable
	SellerProductCategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	SellerProductCategoriesTable.ForeignKeys[1].RefTable = SellerProductsTable
	SellerProductImagesTable.ForeignKeys[0].RefTable = SellerProductsTable
	SellerProductVariationsTable.ForeignKeys[0].RefTable = SellerProductsTable
	SellerProductVariationValuesTable.ForeignKeys[0].RefTable = AttributesTable
	SellerProductVariationValuesTable.ForeignKeys[1].RefTable = SellerProductVariationsTable
	SellerRequestsTable.ForeignKeys[0].RefTable = ShopCategoriesTable
	SellerRequestsTable.ForeignKeys[1].RefTable = UsersTable
	SellerShopsTable.ForeignKeys[0].RefTable = UsersTable
	SellerShopsTable.ForeignKeys[1].RefTable = UsersTable
	SellerShopProductsTable.ForeignKeys[0].RefTable = SellerProductsTable
	SellerShopProductsTable.ForeignKeys[1].RefTable = SellerShopsTable
	UserLocationsTable.ForeignKeys[0].RefTable = UsersTable
}
