// Code generated by entc, DO NOT EDIT.

package cart

import (
	"time"
)

const (
	// Label holds the string label denoting the cart type in the database.
	Label = "cart"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeCartProducts holds the string denoting the cart_products edge name in mutations.
	EdgeCartProducts = "cart_products"
	// EdgeCheckout holds the string denoting the checkout edge name in mutations.
	EdgeCheckout = "checkout"
	// Table holds the table name of the cart in the database.
	Table = "carts"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "carts"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_carts"
	// CartProductsTable is the table that holds the cart_products relation/edge.
	CartProductsTable = "cart_products"
	// CartProductsInverseTable is the table name for the CartProduct entity.
	// It exists in this package in order to avoid circular dependency with the "cartproduct" package.
	CartProductsInverseTable = "cart_products"
	// CartProductsColumn is the table column denoting the cart_products relation/edge.
	CartProductsColumn = "cart_cart_products"
	// CheckoutTable is the table that holds the checkout relation/edge.
	CheckoutTable = "checkouts"
	// CheckoutInverseTable is the table name for the Checkout entity.
	// It exists in this package in order to avoid circular dependency with the "checkout" package.
	CheckoutInverseTable = "checkouts"
	// CheckoutColumn is the table column denoting the checkout relation/edge.
	CheckoutColumn = "cart_checkout"
)

// Columns holds all SQL columns for cart fields.
var Columns = []string{
	FieldID,
	FieldSlug,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "carts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_carts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
