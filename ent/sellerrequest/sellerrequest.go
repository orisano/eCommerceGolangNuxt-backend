// Code generated by entc, DO NOT EDIT.

package sellerrequest

import (
	"time"
)

const (
	// Label holds the string label denoting the sellerrequest type in the database.
	Label = "seller_request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSellerName holds the string denoting the seller_name field in the database.
	FieldSellerName = "seller_name"
	// FieldShopName holds the string denoting the shop_name field in the database.
	FieldShopName = "shop_name"
	// FieldContactNumber holds the string denoting the contact_number field in the database.
	FieldContactNumber = "contact_number"
	// FieldShopLocation holds the string denoting the shop_location field in the database.
	FieldShopLocation = "shop_location"
	// FieldTaxID holds the string denoting the tax_id field in the database.
	FieldTaxID = "tax_id"
	// FieldAccepted holds the string denoting the accepted field in the database.
	FieldAccepted = "accepted"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeShopCategory holds the string denoting the shop_category edge name in mutations.
	EdgeShopCategory = "shop_category"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the sellerrequest in the database.
	Table = "seller_requests"
	// ShopCategoryTable is the table that holds the shop_category relation/edge.
	ShopCategoryTable = "seller_requests"
	// ShopCategoryInverseTable is the table name for the ShopCategory entity.
	// It exists in this package in order to avoid circular dependency with the "shopcategory" package.
	ShopCategoryInverseTable = "shop_categories"
	// ShopCategoryColumn is the table column denoting the shop_category relation/edge.
	ShopCategoryColumn = "shop_category_seller_requests"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "seller_requests"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_seller_requests"
)

// Columns holds all SQL columns for sellerrequest fields.
var Columns = []string{
	FieldID,
	FieldSellerName,
	FieldShopName,
	FieldContactNumber,
	FieldShopLocation,
	FieldTaxID,
	FieldAccepted,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "seller_requests"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"shop_category_seller_requests",
	"user_seller_requests",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ContactNumberValidator is a validator for the "contact_number" field. It is called by the builders before save.
	ContactNumberValidator func(string) error
	// DefaultAccepted holds the default value on creation for the "accepted" field.
	DefaultAccepted bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
